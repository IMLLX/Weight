C51 COMPILER V9.01   DISPLAY                                                               11/14/2020 01:32:12 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN display.obj
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE src\display.c BROWSE DEBUG OBJECTEXTEND PRINT(.\display.lst) 
                    -OBJECT(display.obj)

line level    source

   1          #include "weigh.h"
   2          #define LCD_BUS P0      // 12864液晶接口总线
   3          
   4          sbit LCD_RS = P1 ^ 2;   // 低电平为写指令，高电平为写数据端
   5          sbit LCD_RW = P1 ^ 1;   // 低电平为写，高电平为读
   6          sbit LCD_EN = P1 ^ 0;   // 使能端
   7          
   8          /********************************************************************
   9          函数名称: void Check_Busy()         
  10          功能简介: 读检测12864液晶内部工作状态
  11          入口参数: 无
  12          返回值  ：无
  13          *********************************************************************/
  14          void await_lcd()
  15          {
  16   1          LCD_RS = 0;
  17   1          LCD_RW = 1;         // 读
  18   1          LCD_EN = 0;
  19   1          LCD_BUS = 0xff;     // 把LCD_BUS拉高为输入端
  20   1          delay(5);
  21   1          LCD_EN = 1;
  22   1          delay(5);
  23   1          // while ((LCD_BUS & 0x80) == 0x80);   // LCD_BUS最高位为STA7返回值，0允许操作，1禁止
  24   1          while (!LCD_BUS);
  25   1          LCD_EN = 0;
  26   1      }
  27          
  28          /********************************************************************
  29          函数名称: void write_cmd(unsigned char cmd) 
  30          功能简介: 12864液晶写指令
  31          入口参数: UINT_8 cmd
  32          返回值  ：无
  33          *********************************************************************/
  34          void write_cmd(unsigned char cmd)
  35          {
  36   1          await_lcd();
  37   1          LCD_RS = 0;
  38   1          LCD_RW = 0;
  39   1          LCD_EN = 0;
  40   1          LCD_BUS = cmd;
  41   1          delay(5);
  42   1          LCD_EN = 1; //在使能端LCD_EN上升沿时把指令cmd写入
  43   1          delay(5);
  44   1          LCD_EN = 0;
  45   1      }
  46          
  47          /********************************************************************
  48          函数名称: void write_data(unsigned char dat)
  49          功能简介: 12864液晶写数据
  50          入口参数: UINT_8 data
  51          返回值  ：无
  52          *********************************************************************/
  53          void write_data(unsigned char dat)
  54          {
C51 COMPILER V9.01   DISPLAY                                                               11/14/2020 01:32:12 PAGE 2   

  55   1          await_lcd();
  56   1          LCD_RS = 1;
  57   1          LCD_RW = 0;
  58   1          LCD_EN = 0;
  59   1          LCD_BUS = dat;
  60   1          delay(5);
  61   1          LCD_EN = 1; //在使能端LCD_EN上升沿时把数据data写入
  62   1          delay(5);
  63   1          LCD_EN = 0;
  64   1      }
  65          
  66          /********************************************************************
  67          函数名称: dis_init()
  68          功能简介: 12864液晶初始化
  69          入口参数: 无
  70          返回值  ：无
  71          *********************************************************************/
  72          void dis_init()
  73          {
  74   1          write_cmd(0x30);    // 8为并行，指令为基本指令
  75   1          write_cmd(0x0c);    // 整体显示开
  76   1          write_cmd(0x01);    // 清屏
  77   1      }
  78          
  79          /********************************************************************
  80          函数名称: void display(unsigned char x, unsigned char y, unsigned char *string)     
  81          功能简介: 液晶DDRAM地址选择显示,x选择行，y选择列，string指针传递字符串
  82          入口参数: UINT_8 x, UINT_8 y, UINT_8 *string
  83          返回值  ：无
  84          *********************************************************************/
  85          void display(unsigned char x, unsigned char y, unsigned char *string)
  86          {
  87   1          switch (x)
  88   1          {
  89   2          case 0:
  90   2              write_cmd(0x80 + y);
  91   2              break;
  92   2          case 1:
  93   2              write_cmd(0x90 + y);
  94   2              break;
  95   2          case 2:
  96   2              write_cmd(0x88 + y);
  97   2              break;
  98   2          case 3:
  99   2              write_cmd(0x98 + y);
 100   2              break;
 101   2          default:
 102   2              break;
 103   2          }
 104   1          while (*string != '\0')
 105   1          {
 106   2              write_data(*string++);
 107   2          }
 108   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
C51 COMPILER V9.01   DISPLAY                                                               11/14/2020 01:32:12 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
