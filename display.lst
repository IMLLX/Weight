C51 COMPILER V9.01   DISPLAY                                                               11/14/2020 23:08:47 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN display.obj
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE src\display.c BROWSE DEBUG OBJECTEXTEND PRINT(.\display.lst) 
                    -OBJECT(display.obj)

line level    source

   1          #include "weigh.h"
   2          #define LCD_BUS P0 // 12864液晶接口总线
   3          
   4          sbit LCD_RS = P3 ^ 5;  // 低电平为写指令，高电平为写数据端
   5          sbit LCD_RW = P3 ^ 6;  // 低电平为写，高电平为读
   6          sbit LCD_EN = P3 ^ 4;  // 使能端
   7          sbit LCD_PSB = P3 ^ 7; // 对比度
   8          sbit busy = P0 ^ 7;    // 忙端口
   9          
  10          
  11          
  12          /********************************************************************
  13          函数名称: void Check_Busy()         
  14          功能简介: 读检测12864液晶内部工作状态
  15          入口参数: 无
  16          返回值  ：无
  17          *********************************************************************/
  18          void await_lcd()
  19          {
  20   1          LCD_BUS = 0xff; // 把LCD_BUS拉高为输入端
  21   1          LCD_RS = 0;
  22   1          LCD_RW = 1; // 读
  23   1          LCD_EN = 1;
  24   1          delay(5);
  25   1          while ((LCD_BUS & 0x80) == 0x80)
  26   1              ; // LCD_BUS最高位为STA7返回值，0允许操作，1禁止
  27   1          // while (!LCD_BUS);
  28   1          while (busy)
  29   1              ;
  30   1          LCD_EN = 0;
  31   1      }
  32          
  33          /********************************************************************
  34          函数名称: void write_cmd(unsigned char cmd) 
  35          功能简介: 12864液晶写指令
  36          入口参数: UINT_8 cmd
  37          返回值  ：无
  38          *********************************************************************/
  39          void write_cmd(unsigned char cmd)
  40          {
  41   1          await_lcd();
  42   1          LCD_RS = 0;
  43   1          LCD_RW = 0;
  44   1          LCD_EN = 0;
  45   1          LCD_BUS = cmd;
  46   1          LCD_EN = 1; //在使能端LCD_EN上升沿时把指令cmd写入
  47   1          Nop(3);
  48   1          LCD_EN = 0;
  49   1      }
  50          
  51          /********************************************************************
  52          函数名称: void write_data(unsigned char dat)
  53          功能简介: 12864液晶写数据
  54          入口参数: UINT_8 data
C51 COMPILER V9.01   DISPLAY                                                               11/14/2020 23:08:47 PAGE 2   

  55          返回值  ：无
  56          *********************************************************************/
  57          void write_data(unsigned char dat)
  58          {
  59   1          await_lcd();
  60   1          LCD_RS = 1;
  61   1          LCD_RW = 0;
  62   1          LCD_BUS = dat;
  63   1          LCD_EN = 1;
  64   1          Nop(3);
  65   1          LCD_EN = 0;
  66   1      }
  67          
  68          /********************************************************************
  69          函数名称: dis_init()
  70          功能简介: 12864液晶初始化
  71          入口参数: 无
  72          返回值  ：无
  73          *********************************************************************/
  74          void dis_init()
  75          {
  76   1          // write_cmd(0x30);    // 8为并行，指令为基本指令
  77   1          write_cmd(0x0c); // 显示开
  78   1          write_cmd(0x01); // 清屏
  79   1          write_cmd(0x06); // 光标移动方向
  80   1      }
  81          
  82          /********************************************************************
  83          函数名称: void display(unsigned char x, unsigned char y, unsigned char *string)     
  84          功能简介: 液晶DDRAM地址选择显示,x选择行，y选择列，string指针传递字符串
  85          入口参数: UINT_8 x, UINT_8 y, UINT_8 *string
  86          返回值  ：无
  87          *********************************************************************/
  88          void display(unsigned char x, unsigned char y, unsigned char *string)
  89          {
  90   1          switch (x)
  91   1          {
  92   2          case 0:
  93   2              write_cmd(0x80 + y);
  94   2              break;
  95   2          case 1:
  96   2              write_cmd(0x90 + y);
  97   2              break;
  98   2          case 2:
  99   2              write_cmd(0x88 + y);
 100   2              break;
 101   2          case 3:
 102   2              write_cmd(0x98 + y);
 103   2              break;
 104   2          default:
 105   2              break;
 106   2          }
 107   1          while (*string != '\0')
 108   1          {
 109   2              write_data(*string);
 110   2              string++;
 111   2          }
 112   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
C51 COMPILER V9.01   DISPLAY                                                               11/14/2020 23:08:47 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
